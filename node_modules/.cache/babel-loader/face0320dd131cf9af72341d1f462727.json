{"ast":null,"code":"class Game {\n  constructor(dimension) {\n    this.dimension = dimension;\n    this.gameState = {\n      board: this.setupNewGame(),\n      score: 0,\n      won: false,\n      over: false\n    };\n  }\n\n  setupNewGame() {\n    const {\n      gameState\n    } = this;\n    gameState.board = this.blankGrid();\n    addNumber();\n    addNumber();\n  }\n\n  blankGrid() {\n    const grid = [],\n          {\n      dimension\n    } = this;\n\n    for (let i = 0; i < dimension; i++) {\n      grid.push(Array(dimension).fill(0));\n    }\n\n    return grid;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/mitchell/School/426/2048/src/Game.js"],"names":["Game","constructor","dimension","gameState","board","setupNewGame","score","won","over","blankGrid","addNumber","grid","i","push","Array","fill"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AAEPC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiB;AACbC,MAAAA,KAAK,EAAE,KAAKC,YAAL,EADM;AAEbC,MAAAA,KAAK,EAAE,CAFM;AAGbC,MAAAA,GAAG,EAAE,KAHQ;AAIbC,MAAAA,IAAI,EAAE;AAJO,KAAjB;AAMH;;AAEDH,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEF,MAAAA;AAAF,QAAgB,IAAtB;AACAA,IAAAA,SAAS,CAACC,KAAV,GAAkB,KAAKK,SAAL,EAAlB;AACAC,IAAAA,SAAS;AACTA,IAAAA,SAAS;AACZ;;AAEDD,EAAAA,SAAS,GAAG;AACR,UAAME,IAAI,GAAG,EAAb;AAAA,UAAiB;AAAET,MAAAA;AAAF,QAAgB,IAAjC;;AACA,SAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,SAAnB,EAA8BU,CAAC,EAA/B,EAAmC;AAC/BD,MAAAA,IAAI,CAACE,IAAL,CAAUC,KAAK,CAACZ,SAAD,CAAL,CAAiBa,IAAjB,CAAsB,CAAtB,CAAV;AACH;;AACD,WAAOJ,IAAP;AACH;;AAzBM;;AA4BX,eAAeX,IAAf","sourcesContent":["class Game {\n    \n    constructor(dimension) {\n        this.dimension = dimension;\n        this.gameState = {\n            board: this.setupNewGame(),\n            score: 0,\n            won: false,\n            over: false\n        }\n    }\n\n    setupNewGame() {\n        const { gameState } = this;\n        gameState.board = this.blankGrid();\n        addNumber();\n        addNumber();\n    }\n\n    blankGrid() {\n        const grid = [], { dimension } = this;\n        for(let i = 0; i < dimension; i++) {\n            grid.push(Array(dimension).fill(0));\n        }\n        return grid;\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}