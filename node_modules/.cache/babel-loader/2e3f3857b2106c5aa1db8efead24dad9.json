{"ast":null,"code":"class Game {\n  constructor(dimension) {\n    this.getRandomNumber = () => Math.random() > .1 ? 2 : 4;\n\n    this.dimension = dimension;\n    this.setupNewGame();\n  }\n\n  setupNewGame() {\n    board = this.blankGrid();\n    addNumber(board);\n    addNumber(board);\n  }\n\n  addNumber(board) {\n    const openings = [],\n          {\n      dimension\n    } = this;\n\n    for (let i = 0; i < dimension; i++) {\n      for (let j = 0; j < dimension; j++) {\n        if (board[i][j] === 0) openings.push({\n          col: i,\n          row: j\n        });\n      }\n    }\n\n    if (openings.length === 0) return;\n\n    if (options.length > 0) {\n      let spot = random(options);\n      let r = random(1);\n      grid[spot.x][spot.y] = r > 0.1 ? 2 : 4;\n    }\n  }\n\n  blankGrid() {\n    const grid = [],\n          {\n      dimension\n    } = this;\n\n    for (let i = 0; i < dimension; i++) {\n      grid.push(Array(dimension).fill(0));\n    }\n\n    return grid;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/mitchell/School/426/2048/src/Game.js"],"names":["Game","constructor","dimension","getRandomNumber","Math","random","setupNewGame","board","blankGrid","addNumber","openings","i","j","push","col","row","length","options","spot","r","grid","x","y","Array","fill"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AAEPC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAgCvBC,eAhCuB,GAgCL,MAAMC,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAArB,GAAyB,CAhC1B;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACXC,IAAAA,KAAK,GAAI,KAAKC,SAAL,EAAT;AACAC,IAAAA,SAAS,CAACF,KAAD,CAAT;AACAE,IAAAA,SAAS,CAACF,KAAD,CAAT;AACH;;AAEDE,EAAAA,SAAS,CAACF,KAAD,EAAQ;AACb,UAAMG,QAAQ,GAAG,EAAjB;AAAA,UAAqB;AAAER,MAAAA;AAAF,QAAgB,IAArC;;AAEA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAApB,EAA+BS,CAAC,EAAhC,EAAoC;AAChC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,SAApB,EAA+BU,CAAC,EAAhC,EAAoC;AAChC,YAAIL,KAAK,CAACI,CAAD,CAAL,CAASC,CAAT,MAAgB,CAApB,EACIF,QAAQ,CAACG,IAAT,CAAc;AAACC,UAAAA,GAAG,EAAEH,CAAN;AAASI,UAAAA,GAAG,EAAEH;AAAd,SAAd;AAEP;AACJ;;AAED,QAAGF,QAAQ,CAACM,MAAT,KAAoB,CAAvB,EACI;;AAEJ,QAAIC,OAAO,CAACD,MAAR,GAAiB,CAArB,EAAwB;AACpB,UAAIE,IAAI,GAAGb,MAAM,CAACY,OAAD,CAAjB;AACA,UAAIE,CAAC,GAAGd,MAAM,CAAC,CAAD,CAAd;AACAe,MAAAA,IAAI,CAACF,IAAI,CAACG,CAAN,CAAJ,CAAaH,IAAI,CAACI,CAAlB,IAAuBH,CAAC,GAAG,GAAJ,GAAU,CAAV,GAAc,CAArC;AACH;AACJ;;AAIDX,EAAAA,SAAS,GAAG;AACR,UAAMY,IAAI,GAAG,EAAb;AAAA,UAAiB;AAAElB,MAAAA;AAAF,QAAgB,IAAjC;;AACA,SAAI,IAAIS,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,SAAnB,EAA8BS,CAAC,EAA/B,EAAmC;AAC/BS,MAAAA,IAAI,CAACP,IAAL,CAAUU,KAAK,CAACrB,SAAD,CAAL,CAAiBsB,IAAjB,CAAsB,CAAtB,CAAV;AACH;;AACD,WAAOJ,IAAP;AACH;;AA1CM;;AA6CX,eAAepB,IAAf","sourcesContent":["class Game {\n    \n    constructor(dimension) {\n        this.dimension = dimension;\n        this.setupNewGame()\n    }\n\n    setupNewGame() {\n        board  = this.blankGrid();\n        addNumber(board);\n        addNumber(board);\n    }\n\n    addNumber(board) {\n        const openings = [], { dimension } = this;\n\n        for (let i = 0; i < dimension; i++) {\n            for (let j = 0; j < dimension; j++) {\n                if (board[i][j] === 0) \n                    openings.push({col: i, row: j});\n                \n            }\n        }\n\n        if(openings.length === 0)\n            return;\n\n        if (options.length > 0) {\n            let spot = random(options);\n            let r = random(1);\n            grid[spot.x][spot.y] = r > 0.1 ? 2 : 4;\n        }\n    }\n\n    getRandomNumber = () => Math.random() > .1 ? 2 : 4;\n\n    blankGrid() {\n        const grid = [], { dimension } = this;\n        for(let i = 0; i < dimension; i++) {\n            grid.push(Array(dimension).fill(0));\n        }\n        return grid;\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}