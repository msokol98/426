{"ast":null,"code":"class Game {\n  constructor(dimension) {\n    this.dimension = dimension;\n    this.setupNewGame();\n  }\n\n  setupNewGame() {\n    board = this.blankGrid();\n    addNumber(board);\n    addNumber(board);\n  }\n\n  addNumber() {\n    let options = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          options.push({\n            x: i,\n            y: j\n          });\n        }\n      }\n    }\n\n    if (options.length > 0) {\n      let spot = random(options);\n      let r = random(1);\n      grid[spot.x][spot.y] = r > 0.5 ? 2 : 4;\n    }\n  }\n\n  blankGrid() {\n    const grid = [],\n          {\n      dimension\n    } = this;\n\n    for (let i = 0; i < dimension; i++) {\n      grid.push(Array(dimension).fill(0));\n    }\n\n    return grid;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/mitchell/School/426/2048/src/Game.js"],"names":["Game","constructor","dimension","setupNewGame","board","blankGrid","addNumber","options","i","j","grid","push","x","y","length","spot","random","r","Array","fill"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AAEPC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACXC,IAAAA,KAAK,GAAI,KAAKC,SAAL,EAAT;AACAC,IAAAA,SAAS,CAACF,KAAD,CAAT;AACAE,IAAAA,SAAS,CAACF,KAAD,CAAT;AACH;;AAEDE,EAAAA,SAAS,GAAG;AACR,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAClC,YAAIC,IAAI,CAACF,CAAD,CAAJ,CAAQC,CAAR,MAAe,CAAnB,EAAsB;AACpBF,UAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,YAAAA,CAAC,EAAEJ,CADQ;AAEXK,YAAAA,CAAC,EAAEJ;AAFQ,WAAb;AAID;AACF;AACF;;AACD,QAAIF,OAAO,CAACO,MAAR,GAAiB,CAArB,EAAwB;AACtB,UAAIC,IAAI,GAAGC,MAAM,CAACT,OAAD,CAAjB;AACA,UAAIU,CAAC,GAAGD,MAAM,CAAC,CAAD,CAAd;AACAN,MAAAA,IAAI,CAACK,IAAI,CAACH,CAAN,CAAJ,CAAaG,IAAI,CAACF,CAAlB,IAAuBI,CAAC,GAAG,GAAJ,GAAU,CAAV,GAAc,CAArC;AACD;AACE;;AAEDZ,EAAAA,SAAS,GAAG;AACR,UAAMK,IAAI,GAAG,EAAb;AAAA,UAAiB;AAAER,MAAAA;AAAF,QAAgB,IAAjC;;AACA,SAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,SAAnB,EAA8BM,CAAC,EAA/B,EAAmC;AAC/BE,MAAAA,IAAI,CAACC,IAAL,CAAUO,KAAK,CAAChB,SAAD,CAAL,CAAiBiB,IAAjB,CAAsB,CAAtB,CAAV;AACH;;AACD,WAAOT,IAAP;AACH;;AAtCM;;AAyCX,eAAeV,IAAf","sourcesContent":["class Game {\n    \n    constructor(dimension) {\n        this.dimension = dimension;\n        this.setupNewGame()\n    }\n\n    setupNewGame() {\n        board  = this.blankGrid();\n        addNumber(board);\n        addNumber(board);\n    }\n\n    addNumber() {\n        let options = [];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n      if (grid[i][j] === 0) {\n        options.push({\n          x: i,\n          y: j\n        });\n      }\n    }\n  }\n  if (options.length > 0) {\n    let spot = random(options);\n    let r = random(1);\n    grid[spot.x][spot.y] = r > 0.5 ? 2 : 4;\n  }\n    }\n\n    blankGrid() {\n        const grid = [], { dimension } = this;\n        for(let i = 0; i < dimension; i++) {\n            grid.push(Array(dimension).fill(0));\n        }\n        return grid;\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}